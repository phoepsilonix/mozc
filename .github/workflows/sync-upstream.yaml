name: Sync Master with Upstream

on:
  schedule:
    - cron: '0 03-23/6 * * *'  # 毎日6時間毎
  workflow_dispatch:  # 手動実行用

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      ORIGINAL_OWNER: "google"
      ORIGINAL_REPOSITORY: "mozc"

    steps:
      - name: Configure Git
        run: |
          git config --global user.name "Masato TOYOSHIMA"
          git config --global user.email phoepsilonix@phoepsilonix.love
          git config --global url.git@github.com:.insteadOf https://github.com/
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.PRIVATE_REPO_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_ed25519
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          git clone -b sync-upstream --filter=tree:0 --no-single-branch https://github.com/phoepsilonix/$ORIGINAL_REPOSITORY.git mozc

      - name: Fetch upstream
        run: |
          cd mozc
          git remote add upstream https://github.com/$ORIGINAL_OWNER/$ORIGINAL_REPOSITORY.git
          git fetch --prune --filter=tree:0 upstream master

      - name: Check for changes
        id: check_changes
        run: |
          cd mozc
          if [ -n "$(git diff origin/master FETCH_HEAD)" ] || [ -n "$(git diff sync-upstream~1 FETCH_HEAD)" ]; then
            echo "Changes detected"
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected"
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi


      - name: Import bot's GPG key for signing commits
        if: steps.check_changes.outputs.changes_detected == 'true'
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}

      - name: Sync master branch
        if: steps.check_changes.outputs.changes_detected == 'true'
        env:
          GH_TOKEN: ${{ secrets.MOZC_WORKFLOW_KEY }}
        run: |
          cd mozc
          git checkout -b master --track origin/master
          git reset --hard upstream/master
          git push origin master --force

          # MOZC_VERSION CHECK
          #git fetch --tags --prune --filter=tree:0 upstream master
          MOZC_TAG_1=$(git describe --tags --abbrev=0)
          source <(grep = src/data/version/mozc_version_template.bzl| tr -d ' ')
          MOZC_TAG_2=$(printf "v%s.%s.%s.%s" "$MAJOR" "$MINOR" "$BUILD_OSS" "$((REVISION+2))")
          echo "$MOZC_TAG_1"
          echo "$MOZC_TAG_2"
          if [[ "$MOZC_TAG_1" != "$MOZC_TAG_2" ]];then
            OSS_COMMIT=$(git log -G "BUILD_OSS [^ ]* $BUILD_OSS" -1 --pretty=%H)
            [[ -z "$OSS_COMMIT" ]] && OSS_COMMIT=$(git log -G "$BUILD_OSS" -1 --pretty=%H)
            if [[ -n "$OSS_COMMIT" ]]; then
              git tag $MOZC_TAG_2 $OSS_COMMIT
              git push origin master --tags --force
            else
              echo "is BUILD_OSS updated? But COMMIT LOG is Nothing?"
              git tag $MOZC_TAG_2 HEAD
              git push origin master --tags --force
            fi
          fi

          git checkout sync-upstream
          if [ -z "$(git diff sync-upstream~..upstream/master)" ]; then
            echo "No changes detected. Exiting."
          else
            git reset --hard upstream/master
            echo "Ensuring sync-branch.yaml exists..."
            if [ ! -f .github/workflows/sync-upstream.yaml ]; then
              echo "Restoring sync-branch.yaml from previous commit..."
              git checkout HEAD@{1} -- .github/workflows/sync-upstream.yaml
              git add .github/workflows/sync-upstream.yaml
              git commit -m "Restore sync-upstream.yaml"
            fi
          fi
          git push origin sync-upstream --force
